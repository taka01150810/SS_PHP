<?php
/*
データ型（型）とは、データの種類のことです。
PHPでは、実にさまざまなデータをコードの中で扱えます。
たとえば、「abc」や「イロハ」は文字列型、1や10は数値型、true（真）やfalse（偽）は真偽型に分類できます。
プログラミング言語には、このデータ型を強く意識するものと、逆にほとんど意識する必要がないものとがあります。
PHPは後者に属する言語です。つまり、データ型に対して寛容です。最初に文字列を格納した変数にあとから数字をセットしてもかまいませんし、その逆も可能です。
そのため、次のようなスクリプトもPHPでは正しいコードです。
*/

$data = '10日でおぼえるPHP入門教室';
$data = 2920;//文字列が代入された変数に数値を代入
print $data;

/*
しかし開発者がデータ型をまったく意識しなくてよいというわけではありません。
PHPで扱える主なデータ型はスカラー型、複合型、特殊型。
スカラー型とは、1つの変数（入れ物）で1つの値だけを扱うことができるものを言う。データ型の中でも最も基本的なものである。
スカラー型と対照的なのが複合型で、この型は1つの変数で複数の値をまとめて扱える。
特殊型は、スカラー型／複合型のいずれにも分類できない特殊な値を表す型のことである。
*/

// 2.3.1 論理リテラル（bool）
/*
論理型は、スカラー型の中でも最も単純な型で、真（正しい）か偽（間違い）のいずれかの状態しか持ちません。
falseキーワードだけがfalseを表すわけではない。
*/

// 2.3.2 整数リテラル（int)
/*
10進数,16進数(0xで始まる値),8進数(0で始まる値)やマイナス、0など
*/

//2.3.3 浮動小数点数リテラル（float）
/*
浮動小数点数リテラルは、整数リテラルに比べると少しだけ複雑です。
一般的な「1.41421356」のような小数点数だけでなく、指数表現が存在するからです。
指数表現とは、＜仮数部＞e＜符号＞＜指数部＞の形式で表されるリテラルのことです。
＜仮数部＞×10の＜符号＞＜指数部＞で、本来の小数値に変換できます。

1.4142e10 ➡ 1.4142×10の10条 ➡ 14142000000.01.
173205e7 ➡ 1.173205×10の-7条 ➡ 0.0000001173205

*/

//(補足) 数値セパレーター
/*
PHP7.4以降では、桁数の大きな数値の可読性を改善するために、数値リテラルの中に桁区切り文字（_）を記述できるようになりました（数値セパレーター）。
日常的に利用する桁区切り文字である「,」でないのは、PHPにおいてカンマはすでに別の意味を持っているためです。
*/
print '<br/>';
$value = 1_234_567;
print $value;//結果 1234567

print '<br/>';
$pi=3.141_592_653_59;
print $pi;//結果 3.14159265359

print '<br/>';
$num=0.123_456e10;
print $num;//結果 1234560000

?>