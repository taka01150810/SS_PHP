<?php
//3.3.1 文字列混在の比較
/*
等価演算子「==」は、数値と文字列を比較するときに、文字列を数値に変換した上で比較しようとします。
また、文字列同士の比較であっても、数値形式の文字列である場合には、同じく数値に変換したものを比較しようとします。
*/
var_dump('3.14' == 3.14000);//結果 bool(true)
var_dump('3.14E2' == 314);//結果 bool(true)
var_dump('0x10' == 16);//結果 bool(false)
var_dump('010' == 8);//結果 bool(false)
var_dump('13xyz' == 13);//結果 bool(true)
var_dump('X' == 0);//結果 bool(true)
var_dump('3.14' == '3.14000');//結果 bool(true)
var_dump('3.14E2' == '314');//結果 bool(true)
var_dump('13xyz' == '13');//結果 bool(false)

print '<br/>';
//3.3.2 厳格な等価演算子( === )
/*
「===」演算子は「厳密な等価演算子」とも呼ばれ、値を比較する際に値とデータ型が厳密に一致するかどうかを判定します。
*/
var_dump('3.14E2' === 314);//結果 bool(false)
var_dump('X' === 0);//結果 bool(false)
var_dump('1' === 1);//結果 bool(false)

//3.3.3 浮動小数点の比較
/*
定数EPSILONは、誤差の許容範囲を表します（❶）。計算機イプシロン、丸め単位などとも呼ばれます。
浮動小数点数同士の差を求め（absは絶対値を求める関数です）、その値がイプシロン未満であれば、保証した桁数までは等しいということになる。
*/
const EPSILON = 0.000001;
$x = 0.123456;
$y = 0.123455;

var_dump(abs($x - $y) < EPSILON );//結果 bool(true)